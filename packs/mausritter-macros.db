{"name":"Roll Weather","type":"script","author":"q3MrHZu1cOoXxlLX","img":"systems/mausritter/images/icons/Macro%20Icons/sun-cloud.png","scope":"global","command":"//Generate Weather\n\n/*\nsource: https://raw.githubusercontent.com/brunocalado/mestre-digital/master/Foundry%20VTT/Macros/Sistemas%20Diversos/Mausritter-Weather.js\nUpdated for Foundry VTT v11+\n*/\n\nconst version = '2.2';\nconst compendium_label = 'Tables';\n\n(async () => {\n    let seasonList = ['Summer', 'Autumn', 'Winter', 'Spring'];\n    let selectList = \"\";\n\n    seasonList.forEach(option => selectList += \"<option value='\" + option + \"'>\" + option + \"</option>\")\n\n    let d = new foundry.applications.api.DialogV2({\n        window: { title: \"Select Season\" },\n        content: \"<h2> Season </h2> <select style='margin-bottom:10px;'name='stat' id='stat'> \" + selectList + \"</select> <br/>\",\n        buttons: [{\n            action: \"roll\",\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: \"Roll\",\n            default: true,\n            callback: (event, button, dialog) => drawFromTable('Weather '+button.form.elements.stat.value)\n        }, {\n            action: \"cancel\",\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"Cancel\"\n        }]\n    });\n    d.render(true);\n\n})()\n\n/* Functions */\nasync function drawFromTable(tableName) {\n  try {\n    let list_compendium = await game.packs.filter(p=>p.documentName=='RollTable');      \n    let inside = await list_compendium.filter( p=>p.metadata.label==compendium_label)[0].getDocuments();      \n    let table = await inside.filter( p=>p.name==tableName )[0];\n    \n    if (!table) {\n      ui.notifications.warn(`Table ${tableName} not found.`, {});\n      return;\n    }\n    \n    let weather = await table.roll(); \n    weather = weather.results[0].description || weather.results[0].name;  \n    let message = \"<h2> Today's Weather: </h2><b style='font-size:120%;'>\"+weather+\"</br>\";\n    \n    let chatData = {\n      content: message,\n      whisper : ChatMessage.getWhisperRecipients(\"GM\")\n    };  \n\n    ChatMessage.create(chatData);\n  } catch (error) {\n    console.error('Error in drawFromTable:', error);\n    ui.notifications.error(`Error rolling weather table: ${error.message}`, {});\n  }\n}","folder":null,"sort":0,"permission":{"default":0,"q3MrHZu1cOoXxlLX":3},"flags":{"core":{"sourceId":"Macro.VPnVozGT7zmi64xz"}},"_id":"EjAi7W1jOj8v6zws"}
{"name":"Generate Hex","type":"script","author":"q3MrHZu1cOoXxlLX","img":"systems/mausritter/images/icons/Macro%20Icons/honeycomb.png","scope":"global","command":"//Generate Hex\n\n/*\nsource: https://raw.githubusercontent.com/brunocalado/mestre-digital/master/Foundry%20VTT/Macros/Sistemas%20Diversos/Mausritter-Hex.js\nUpdated for Foundry VTT v11+\n*/\n\nconst version = '2.2';\nconst compendium_label = 'Tables';\n\n(async () => {\n\n    let hexTypeList = ['Random', 'Countryside', 'Forest', 'River', 'Human Town'];\n    let selectList = \"\";\n\n    hexTypeList.forEach(option => selectList += \"<option value='\" + option + \"'>\" + option + \"</option>\")\n\n    let d = new foundry.applications.api.DialogV2({\n        window: { title: \"Select Type\" },\n        content: \"<h2> Select or Roll Hex Type </h2> <select style='margin-bottom:10px;'name='stat' id='stat'> \" + selectList + \"</select> <br/>\",\n        buttons: [{\n            action: \"roll\",\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: \"Roll\",\n            default: true,\n            callback: (event, button, dialog) => hexType(button.form.elements.stat.value)\n        }, {\n            action: \"cancel\",\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: \"Cancel\"\n        }]\n    });\n    d.render(true);\n\n})()\n\nasync function hexType(hexType) {\n  try {\n    let hexContents = \"\";\n    let hexDetails = \"\";\n    let buffer ='';\n    let randomHex = ['Countryside', 'Forest', 'River', 'Human Town'];\n    \n    if(hexType == \"Random\"){\n      hexType = randomHex[Math.floor(Math.random() * randomHex.length)];\n    }\n\n    buffer = await drawFromTable(\"Hex - \" + hexType);\n    if (!buffer) return;\n    buffer = await buffer.roll(); \n    hexContents = buffer.results[0].description || buffer.results[0].name;\n\n    buffer = await drawFromTable(\"Hex - Landmark Details\");\n    if (!buffer) return;\n    buffer = await buffer.roll(); \n    hexDetails = buffer.results[0].description || buffer.results[0].name;\n\n\n    let message = \"\\\n    <h2> \"+hexType+\": </h2>\\\n    <b> Landmark: </b>\"+hexContents+\"</br>\\\n    <b> Details: </b><i>\"+hexDetails+\"</i></br>\";\n\n    let chatData = {\n      content: message,\n      whisper : ChatMessage.getWhisperRecipients(\"GM\")\n    };  \n\n    ChatMessage.create(chatData);\n  } catch (error) {\n    console.error('Error in hexType:', error);\n    ui.notifications.error(`Error generating hex: ${error.message}`, {});\n  }\n\n}\n\n/* Functions */\nasync function drawFromTable(tableName) {\n  try {\n    let list_compendium = await game.packs.filter(p=>p.documentName=='RollTable');      \n    let inside = await list_compendium.filter( p=>p.metadata.label==compendium_label )[0].getDocuments();      \n    let table = await inside.filter( p=>p.name==tableName )[0];\n    \n    if (!table) {\n      ui.notifications.warn(`Table ${tableName} not found.`, {});\n      return;\n    }\n    return await table;\n  } catch (error) {\n    console.error('Error in drawFromTable:', error);\n    ui.notifications.error(`Error accessing table ${tableName}: ${error.message}`, {});\n    return null;\n  }\n}","folder":null,"sort":0,"permission":{"default":0,"q3MrHZu1cOoXxlLX":3},"flags":{"core":{"sourceId":"Macro.4mkVc1l1zfsIgQgj"}},"_id":"GUSg73Vtn1Pck49h"}
{"name":"NPC Generator","type":"script","author":"q3MrHZu1cOoXxlLX","img":"systems/mausritter/images/icons/Macro%20Icons/book-cover.png","scope":"global","command":"/* Instant NPC - v0.6\n\nSource: https://raw.githubusercontent.com/brunocalado/mestre-digital/master/Foundry%20VTT/Macros/Sistemas%20Diversos/Mausritter-InstantNPC.js\nIcon: systems/mausritter/images/sample/Portrait_Rat.png\nUpdated for Foundry VTT v11+\n*/\n//test stuff: console.log(canvas.tokens.controlled[0].actor);\n\nconst compendium_label = 'Tables';\n\n(async () => {\n  try {\n    const Appearance = await drawFromTable('Non-player mice - Appearance');\n    const Birthsign = await drawFromTable('Non-player mice - Birthsign and Disposition');\n    const Quirk = await drawFromTable('Non-player mice - Quirk');\n    const Social = await drawFromTable('Non-player mice - Social position and Payment for service');\n    const Wants = await drawFromTable('Non-player mice - Wants');\n    const Relationship = await drawFromTable('Non-player mice - Relationship');\n    \n    const Birthname = await drawFromTable('Mousy Names - Birthname');  \n    const Matriname = await drawFromTable('Mousy Names - Matriname');\n    \n    const dexterity = await attrRoll();\n    const strength = await attrRoll();\n    const will = await attrRoll();\n    const health = await healthRoll();\n    \n    let msg = '';\n    msg += `<p><b>Social position and Payment for service:</b> ${Social}</p>`;  \n    msg += `<p><b>Appearance:</b> ${Appearance}</p>`;  \n    msg += `<p><b>Quirk:</b> ${Quirk}</p>`;  \n    msg += `<p><b>Wants:</b> ${Wants}</p>`;  \n    msg += `<p><b>Relationship:</b> ${Relationship}</p>`;  \n    \n    //let npchp = randomHP(4,10);\n    let instantNPC = await Actor.create({\n      name: Birthname + \" \" + Matriname,\n      type: \"hireling\",\n      data: {\n        description: {\n          disposition: Birthsign\n        },   \n        notes: msg,\n        stats: {\n          dexterity: {          \n            max: dexterity,\n            value: dexterity\n          },\n          strength: {          \n            max: strength,\n            value: strength\n          },\n          will: {          \n            max: will,\n            value: will\n          }        \n        },\n        health: {\n          max: health,\n          value: health\n        }        \n      }\n    });\n\n    await instantNPC.sheet.render(true);\n  } catch (error) {\n    console.error('Error in NPC Generator:', error);\n    ui.notifications.error(`Error generating NPC: ${error.message}`, {});\n  }\n  \n})()\n\n/* Functions */\nasync function drawFromTable(tableName) {\n  try {\n    let list_compendium = await game.packs.filter(p=>p.documentName=='RollTable');      \n    let inside = await list_compendium.filter( p=>p.metadata.label==compendium_label)[0].getDocuments();      \n    let table = await inside.filter( p=>p.name==tableName )[0];\n    \n    if (!table) {\n      ui.notifications.warn(`Table ${tableName} not found.`, {});\n      return;\n    }\n    \n    let buffer = await table.roll(); \n   \n    return buffer.results[0].description || buffer.results[0].name;\n  } catch (error) {\n    console.error('Error in drawFromTable:', error);\n    ui.notifications.error(`Error accessing table ${tableName}: ${error.message}`, {});\n    return 'Error generating content';\n  }\n}\n\nfunction treasureCoins(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;  \n}\n\nasync function attrRoll() {\n  const roll = new Roll('2d6');\n  await roll.evaluate();\n  return roll.total;\n}\n\nasync function healthRoll() {\n  const roll = new Roll('1d6');\n  await roll.evaluate();\n  return roll.total;\n}\n\nfunction randomHP(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;  \n}","folder":null,"sort":0,"permission":{"default":0,"q3MrHZu1cOoXxlLX":3},"flags":{"core":{"sourceId":"Macro.5upTlJUaoAsTvdMN"}},"_id":"LKs8P76vMJzk1Zx0"}
{"name":"Create New Character","type":"script","scope":"global","author":"J9w6QSrLwUjGdXab","img":"systems/mausritter/images/icons/Macro%20Icons/mouse.png","command":"await game.mausritter.autoCreateCharacter();","folder":null,"sort":0,"ownership":{"default":0,"J9w6QSrLwUjGdXab":3},"flags":{},"_stats":{"systemId":"mausritter","systemVersion":"0.2.9","coreVersion":"10.291","createdTime":1688142277097,"modifiedTime":1688235369587,"lastModifiedBy":"J9w6QSrLwUjGdXab"},"_id":"LfbqyHciZsPBWINA"}
{"name":"Roll Stat","permission":{"default":0,"GUOC66HwYtlbK6ox":3},"type":"script","flags":{"core":{"sourceId":"Macro.d3LcjEb8RJKths4H"}},"scope":"global","command":"game.mausritter.rollStatMacro();","author":"GUOC66HwYtlbK6ox","img":"systems/mausritter/images/icons/Macro%20Icons/rolling-dices.png","actorIds":[],"_id":"MedvXgVpsy2iYgEs"}
